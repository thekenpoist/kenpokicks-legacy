extends ../layouts/dashboard-layout.pug

block content
  // ðŸ”· Top Profile Section
  .bg-white.shadow-lg.rounded-xl.p-6.flex.items-center.justify-between.mb-8
    .flex.items-center.space-x-6
      // Avatar + username dropdown
      .relative
        img(
          src=currentUser.avatar || '/images/default-avatar.jpg',
          alt="User Avatar",
          class="w-24 h-24 rounded-full border-2 border-red-800 object-cover"
        )

        // Username with dropdown
        .text-center.mt-2
          .relative
            button(
              type="button",
              class="text-sm font-semibold text-red-800 cursor-pointer",
              id="profileDropdownBtn"
            ) @#{currentUser.username}

            div(
              id="profileDropdown",
              class="hidden absolute left-1/2 transform -translate-x-1/2 mt-2 w-64 bg-white border border-gray-200 shadow-lg rounded-md z-10"
            )
              ul.p-4.text-sm.text-gray-800.text-left
                li.font-bold.text-lg #{currentUser.fullName}
                li.text-gray-600 Style: #{currentUser.style}
                li.mt-1.text-gray-600 Rank: #{currentUser.rank}
                li.mt-1.text-gray-600 Role: #{currentUser.role}
                li.text-gray-600 Timezone: #{currentUser.timezone}
                li.text-gray-600 Last Login: #{lastLoggedInFormatted}
                li.mt-2
                  a(href="/profiles/me" class="text-blue-600 hover:underline") My Profile 

    .w-full.text-center
        h1.text-3xl.font-bold.mb-1 Welcome back, #{currentUser.firstName}!

  // ðŸ”· Grid Container
  div(class="grid grid-cols-1 md:grid-cols-3 gap-6")

    // ðŸ”¹ Left: Training Curriculum Panel
    .bg-white.shadow-md.rounded-lg.p-4
      h2.text-xl.font-bold.mb-4.text-red-800 Training Curriculum

      // Looping through belts
      each belt in belts
        if belt.beltSlug !== 'white'
          .mb-2.border.border-gray-300.rounded
            details
              summary.cursor-pointer.px-3.py-2.font-semibold #{belt.beltName}
              ul.pl-6.pt-2.pb-2.text-sm.text-gray-700
                li: a(href=`/training/${belt.beltSlug}/basics`) Basics
                li: a(href=`/training/belt/${belt.beltSlug}`) Techniques
                li: a(href=`/training/${belt.beltSlug}/sets`) Sets
                li: a(href=`/training/${belt.beltSlug}/forms`) Forms

    // ðŸ”¹ Right: Training Diary
    div(class="md:col-span-2 bg-white shadow-md rounded-lg p-4")
      .flex.justify-between.items-center.mb-4
        h2.text-xl.font-bold.text-red-800 Training Diary
        button(
          type="button",
          class="text-sm px-3 py-1 bg-red-800 text-white rounded hover:bg-green-700 transition",
          id="openEntryModal"
        ) Add Entry

      // Table headers
      .grid.grid-cols-3.font-semibold.text-gray-600.border-b.border-gray-300.pb-2.mb-2.text-sm
        div Date
        div Category
        div Title

      // Entries container
      div.training-diary-entries
        if trainingLogs && trainingLogs.length
          each log, index in trainingLogs
            if index < 5
              .grid.grid-cols-3.text-sm.text-gray-800.border-b.border-gray-100.py-2(class="cursor-pointer hover:bg-gray-50" onclick="window.location='/logs/#{log.logId}'")
                div= new Date(log.logDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })
                div= log.logCategory
                div.truncate= log.logTitle || '(No Title)'
        else
          .text-gray-500.text-sm No training entries yet.

      if trainingLogs && trainingLogs.length > 5
        div.text-right.mt-3
          a(href="/logs" class="text-sm text-blue-600 hover:underline") View All Logs â†’

  // ðŸ”¶ Add Entry Modal
  div#entryModal.hidden.fixed.inset-0.bg-gray-900.bg-opacity-50.flex.items-center.justify-center.z-50
    div(class="bg-white rounded-lg shadow-lg w-full max-w-md p-6 relative")
      button(
        type="button",
        class="absolute top-2 right-2 text-gray-500 hover:text-red-800",
        id="closeEntryModal"
      ) âœ•
      div#entryFormContainer.text-center.text-gray-500 Loading form...

  // ðŸ”· Scripts
  script.
    document.addEventListener('DOMContentLoaded', function () {
      // Profile dropdown
      const btn = document.getElementById('profileDropdownBtn');
      const dropdown = document.getElementById('profileDropdown');
      if (btn && dropdown) {
        btn.addEventListener('click', function (e) {
          e.stopPropagation();
          dropdown.classList.toggle('hidden');
        });
        document.addEventListener('click', function () {
          dropdown.classList.add('hidden');
        });
      }

      // Modal logic
      const openModalBtn = document.getElementById('openEntryModal');
      const closeModalBtn = document.getElementById('closeEntryModal');
      const modal = document.getElementById('entryModal');
      const formContainer = document.getElementById('entryFormContainer');
      const diary = document.querySelector('.training-diary-entries');

      if (openModalBtn && modal) {
        openModalBtn.addEventListener('click', async () => {
          modal.classList.remove('hidden');
          try {
            const res = await fetch('/logs/new');
            const html = await res.text();
            formContainer.innerHTML = html;
          } catch (err) {
            formContainer.innerHTML = '<p class="text-red-600">Failed to load form.</p>';
          }
        });
      }

      if (closeModalBtn && modal) {
        closeModalBtn.addEventListener('click', () => modal.classList.add('hidden'));
        window.addEventListener('click', (e) => {
          if (e.target === modal) modal.classList.add('hidden');
        });
      }

      // AJAX form submission
      document.addEventListener('submit', function (e) {
        const form = e.target;
        if (form.closest('#entryFormContainer')) {
          e.preventDefault();
          const formData = new FormData(form);
          fetch(form.action, {
            method: 'POST',
            body: formData
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              modal.classList.add('hidden');
              const newEntry = `
                <div class="grid grid-cols-3 text-sm text-gray-800 border-b border-gray-100 py-2 cursor-pointer hover:bg-gray-50"
                     onclick="window.location='/logs/${data.log.logId}'">
                  <div>${new Date(data.log.logDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</div>
                  <div>${data.log.logCategory}</div>
                  <div>${data.log.logTitle || '(No Title)'}</div>
                </div>`;
              diary.insertAdjacentHTML('afterbegin', newEntry);
            } else {
              alert('Error: ' + (data.error || data.errors.map(e => e.msg).join(', ')));
            }
          })
          .catch(err => console.error(err));
        }
      });
    });
