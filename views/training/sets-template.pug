//- views/training/sets-template.pug
extends ../layouts/dashboard-layout.pug

block content
  // ---- Local styles & belt colors ----
  style.
    :root{
      --kenpo-red: #991b1b; /* step labels & set titles */

      /* belt colors */
      --belt-yellow: #eab308;
      --belt-orange: #f97316;
      --belt-purple: #7c3aed;
      --belt-blue:   #2563eb;
      --belt-green:  #16a34a;
      --belt-red:    #dc2626;
      --belt-brown:  #8b5a2b;
      --belt-black:  #111827;
      --belt-white:  #9ca3af;
    }
    .kenpo-red { color: var(--kenpo-red); }

    /* gradient title for red-black */
    .belt-gradient {
      background: linear-gradient(90deg, var(--belt-red), var(--belt-black));
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
    }

  // single-line JS object (valid in Pug)
  - const beltColorMap = { yellow:'var(--belt-yellow)', orange:'var(--belt-orange)', purple:'var(--belt-purple)', blue:'var(--belt-blue)', green:'var(--belt-green)', red:'var(--belt-red)', brown:'var(--belt-brown)', black:'var(--belt-black)', white:'var(--belt-white)' };

  .container.mx-auto.p-4
    if content && content.sets && content.sets.length
      each set in content.sets
        - const beltSlug = (set.beltSlug || '').toLowerCase();
        - const isRedBlack = beltSlug === 'red-black';
        - const titleColor = beltColorMap[beltSlug] || 'inherit';

        // ---- Card (compact & centered) ----
        .bg-white.shadow-sm.rounded-lg.p-4.mb-6.max-w-3xl.mx-auto

          // ---- Title (belt color or red-black gradient) ----
          if isRedBlack
            h1(class="text-xl md:text-2xl font-extrabold text-center mb-3 belt-gradient") #{set.name}
          else
            h1(class="text-xl md:text-2xl font-extrabold text-center mb-3", style=`color:${titleColor}`) #{set.name}

          // Optional intro (for Long set 3 style)
          if set.intro
            p(class="text-sm text-gray-600 mb-4 text-center") #{set.intro}

          // -------- Simple 1..N steps (Long set 1 style) --------
          if set.sequence && set.sequence.length
            .space-y-3
              each step, i in set.sequence
                // fixed 2-col grid for perfect alignment
                .div(class="grid grid-cols-[7.5rem,1fr] md:grid-cols-[8.5rem,1fr] gap-x-3 items-start")
                  // Step label → "Step N" in Kenpo red (no-wrap, tabular digits)
                  span(class="kenpo-red font-semibold select-none whitespace-nowrap tabular-nums leading-6") Step&nbsp;#{i + 1}

                  // Step text (supports parts[] with inline technique links, or plain text)
                  if step.parts && step.parts.length
                    p(class="m-0 text-gray-800 leading-6 break-words")
                      each part in step.parts
                        if part && part.type === 'tech'
                          - const href = part.slug ? `/training/techniques/${encodeURIComponent(part.slug)}` : (part.name ? `/training/techniques/${encodeURIComponent(part.name)}` : null);
                          if href
                            a(href=href class="text-blue-700 hover:underline") #{part.name || part.slug}
                          else
                            span #{part.name || ''}
                        else if part && part.type === 'text'
                          | #{part.value}
                        else
                          | 
                  else
                    p(class="m-0 text-gray-800 leading-6 break-words") #{step.text}

          // -------- Sets with steps (Long set 3 style) --------
          if set.sets && set.sets.length
            .space-y-5
              each s in set.sets
                // Set title → Kenpo red
                h3(class="text-base md:text-lg font-bold kenpo-red mb-2 text-center md:text-left") #{s.title}
                .space-y-3
                  each step, i in s.steps
                    .div(class="grid grid-cols-[7.5rem,1fr] md:grid-cols-[8.5rem,1fr] gap-x-3 items-start")
                      span(class="kenpo-red font-semibold select-none whitespace-nowrap tabular-nums leading-6") Step&nbsp;#{i + 1}
                      if step.parts && step.parts.length
                        p(class="m-0 text-gray-800 leading-6 break-words")
                          each part in step.parts
                            if part && part.type === 'tech'
                              - const href = part.slug ? `/training/techniques/${encodeURIComponent(part.slug)}` : (part.name ? `/training/techniques/${encodeURIComponent(part.name)}` : null);
                              if href
                                a(href=href class="text-blue-700 hover:underline") #{part.name || part.slug}
                              else
                                span #{part.name || ''}
                            else if part && part.type === 'text'
                              | #{part.value}
                            else
                              | 
                      else
                        p(class="m-0 text-gray-800 leading-6 break-words") #{step.text}

          // Footer notes (bottom-only)
          if set.footerNotes
            .mt-6.pt-4.border-t.border-gray-200.max-w-2xl.mx-auto
              if Array.isArray(set.footerNotes)
                ul(class="list-disc list-inside text-sm text-gray-700 space-y-1")
                  each note in set.footerNotes
                    li #{note}
              else
                p(class="text-sm text-gray-700") #{set.footerNotes}

    else
      p(class="text-red-600 font-semibold text-center") There are no Sets for this belt.

    .mt-6.text-center
      a(href="/portal/dashboard" class="text-sm text-blue-600 hover:underline") ← Back to Dashboard
