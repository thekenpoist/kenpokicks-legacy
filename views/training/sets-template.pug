//- views/training/sets-template.pug
extends ../layouts/dashboard-layout.pug

block content
  // ---- Local styles & belt colors ----
  style.
    :root{
      --kenpo-red: #991b1b; /* step labels & section headers */

      /* belt colors */
      --belt-yellow: #eab308;
      --belt-orange: #f97316;
      --belt-purple: #7c3aed;
      --belt-blue:   #2563eb;
      --belt-green:  #16a34a;
      --belt-red:    #dc2626;
      --belt-brown:  #8b5a2b;
      --belt-black:  #111827;
      --belt-white:  #9ca3af;
    }
    .kenpo-red { color: var(--kenpo-red); }
    .belt-gradient {
      background: linear-gradient(90deg, var(--belt-red), var(--belt-black));
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
    }

  // single-line JS object (valid in Pug)
  - const beltColorMap = { yellow:'var(--belt-yellow)', orange:'var(--belt-orange)', purple:'var(--belt-purple)', blue:'var(--belt-blue)', green:'var(--belt-green)', red:'var(--belt-red)', brown:'var(--belt-brown)', black:'var(--belt-black)', white:'var(--belt-white)' };

  // ---- Normalize data shape ----
  -
    // Expect either:
    // A) content.sets: [ { title, steps:[{text}] } ]
    // B) content.forms: [ { name, beltSlug, sets:[...], notes:[...] }, ... ]
    let setsData = [];
    let collectionTitle = null;
    let beltSlug = null;
    let notes = null;

    if (content && Array.isArray(content.sets)) {
      setsData = content.sets;
    } else if (content && Array.isArray(content.forms) && content.forms.length) {
      const first = content.forms[0];
      if (first && Array.isArray(first.sets)) setsData = first.sets;
      collectionTitle = first?.name || null;
      beltSlug = (first?.beltSlug || '').toLowerCase();
      notes = first?.notes || null;
    }

    const isRedBlack = beltSlug === 'red-black';
    const titleColor = beltSlug ? (beltColorMap[beltSlug] || 'inherit') : 'inherit';

  .container.mx-auto.p-4
    // ---- Optional collection title (e.g., "Starblock") ----
    if collectionTitle
      if isRedBlack
        h1.text-2xl.font-extrabold.text-center.mb-4.belt-gradient #{collectionTitle}
      else
        h1.text-2xl.font-extrabold.text-center.mb-4(style={color: titleColor}) #{collectionTitle}

    // ---- Render sets or empty state ----
    if Array.isArray(setsData) && setsData.length
      each s in setsData
        .bg-white.shadow-sm.rounded-lg.p-4.mb-6.max-w-3xl.mx-auto
          // Set title
          if s.title
            h2(class="text-lg md:text-xl font-bold kenpo-red mb-3 text-center") #{s.title}

          // Steps (numbered)
          if Array.isArray(s.steps) && s.steps.length
            .space-y-3
              each step, i in s.steps
                div(class="grid grid-cols-[7.5rem,1fr] md:grid-cols-[8.5rem,1fr] gap-x-3 items-start")
                  // "Step N"
                  span.kenpo-red.font-semibold.select-none.whitespace-nowrap.tabular-nums.leading-6 Step&nbsp;#{i + 1}
                  // Step text
                  p.m-0.text-gray-800.leading-6.break-words #{step && step.text ? step.text : ''}

          // Optional notes per set (rare; usually at collection level)
          if s.notes
            .mt-4.pt-3.border-t.border-gray-200
              if Array.isArray(s.notes)
                ul.list-disc.list-inside.text-sm.text-gray-700.space-y-1
                  each note in s.notes
                    li #{note}
              else
                p.text-sm.text-gray-700 #{s.notes}

      // Collection-level notes (from forms[0].notes in your sample)
      if notes
        .bg-white.shadow-sm.rounded-lg.p-4.max-w-3xl.mx-auto
          h3.text-base.font-semibold.mb-2 Notes
          if Array.isArray(notes)
            ul.list-disc.list-inside.text-sm.text-gray-700.space-y-1
              each n in notes
                li #{n}
          else
            p.text-sm.text-gray-700 #{notes}
    else
      p.text-red-600.font-semibold.text-center There are no Sets for this belt.

    .mt-6.text-center
      a(href="/portal/dashboard" class="text-sm text-blue-600 hover:underline") ‚Üê Back to Dashboard
