//- views/training/forms-template.pug
extends ../layouts/dashboard-layout.pug

block content
  // ---- Local styles & color variables ----
  style.
    :root{
      --kenpo-red: #991b1b; /* step labels & set titles */

      /* belt colors */
      --belt-yellow: #eab308;
      --belt-orange: #f97316;
      --belt-purple: #7c3aed;
      --belt-blue:   #2563eb;
      --belt-green:  #16a34a;
      --belt-red:    #dc2626;
      --belt-brown:  #8b5a2b;
      --belt-black:  #111827;
      --belt-white:  #9ca3af;
    }
    .kenpo-red { color: var(--kenpo-red); }

    /* gradient title for red-black */
    .belt-gradient {
      background: linear-gradient(90deg, var(--belt-red), var(--belt-black));
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
    }

  // map beltSlug -> solid color (non-gradient)
  - const beltColorMap = {
  -   'yellow': 'var(--belt-yellow)',
  -   'orange': 'var(--belt-orange)',
  -   'purple': 'var(--belt-purple)',
  -   'blue':   'var(--belt-blue)',
  -   'green':  'var(--belt-green)',
  -   'red':    'var(--belt-red)',
  -   'brown':  'var(--belt-brown)',
  -   'black':  'var(--belt-black)',
  -   'white':  'var(--belt-white)'
  - };

  .container.mx-auto.p-4
    if content && content.forms && content.forms.length
      each form in content.forms
        - const beltSlug = (form.beltSlug || '').toLowerCase();
        - const titleColor = beltColorMap[beltSlug] || 'inherit';
        - const isRedBlack = beltSlug === 'red-black';

        // ---- Card (compact & centered) ----
        .bg-white.shadow-sm.rounded-lg.p-4.mb-6.max-w-3xl.mx-auto

          // ---- Form Title (belt color or red-black gradient) ----
          if isRedBlack
            h1(class="text-xl md:text-2xl font-extrabold text-center mb-3 belt-gradient") #{form.name}
          else
            h1(class="text-xl md:text-2xl font-extrabold text-center mb-3", style=`color:${titleColor}`) #{form.name}

          // Optional intro (Long Form 3 style)
          if form.intro
            p(class="text-sm text-gray-600 mb-4 text-center") #{form.intro}

          // ------------------------------------------------
          // Simple 1..N steps (e.g., Long Form 1)
          // ------------------------------------------------
          if form.sequence && form.sequence.length
            .space-y-3
              each step, i in form.sequence
                .flex.items-start.gap-3
                  // Step label → "Step N" in Kenpo red
                  span(class="kenpo-red font-semibold shrink-0 select-none") Step #{i + 1}

                  // Step text (supports parts[] with inline technique links, or plain step.text)
                  if step.parts && step.parts.length
                    p(class="text-gray-800")
                      each part in step.parts
                        if part && part.type === 'tech'
                          - const href = part.slug ? `/training/techniques/${encodeURIComponent(part.slug)}` : (part.name ? `/training/techniques/${encodeURIComponent(part.name)}` : null);
                          if href
                            a(href=href class="text-blue-700 hover:underline") #{part.name || part.slug}
                          else
                            span #{part.name || ''}
                        else if part && part.type === 'text'
                          | #{part.value}
                        else
                          | 
                  else
                    p(class="text-gray-800") #{step.text}

          // ------------------------------------------------
          // Sets with steps (e.g., Long Form 3)
          // ------------------------------------------------
          if form.sets && form.sets.length
            .space-y-5
              each s, si in form.sets
                // Set title → Kenpo red
                h3(class="text-base md:text-lg font-bold kenpo-red mb-2 text-center md:text-left") #{s.title}
                .space-y-3
                  each step, i in s.steps
                    .flex.items-start.gap-3
                      // Step label → "Step N" in Kenpo red
                      span(class="kenpo-red font-semibold shrink-0 select-none") Step #{i + 1}

                      // Step text with inline technique links
                      if step.parts && step.parts.length
                        p(class="text-gray-800")
                          each part in step.parts
                            if part && part.type === 'tech'
                              - const href = part.slug ? `/training/techniques/${encodeURIComponent(part.slug)}` : (part.name ? `/training/techniques/${encodeURIComponent(part.name)}` : null);
                              if href
                                a(href=href class="text-blue-700 hover:underline") #{part.name || part.slug}
                              else
                                span #{part.name || ''}
                            else if part && part.type === 'text'
                              | #{part.value}
                            else
                              | 
                      else
                        p(class="text-gray-800") #{step.text}

          // ---- Footer notes (optional) ----
          if form.footerNotes
            .mt-6.pt-4.border-t.border-gray-200.max-w-2xl.mx-auto
              if Array.isArray(form.footerNotes)
                ul(class="list-disc list-inside text-sm text-gray-700 space-y-1")
                  each note in form.footerNotes
                    li #{note}
              else
                p(class="text-sm text-gray-700") #{form.footerNotes}

          // ---- Related techniques derived from steps (auto) ----
          - (function(){
          -   const add = (set, v) => { if (v) set.add(v); };
          -   const rel = new Set();
          -   if (Array.isArray(form.sequence)) {
          -     for (const st of form.sequence) {
          -       if (st && Array.isArray(st.parts)) {
          -         for (const p of st.parts) if (p && p.type === 'tech') add(rel, p.name || p.slug);
          -       }
          -     }
          -   }
          -   if (Array.isArray(form.sets)) {
          -     for (const ss of form.sets) {
          -       if (ss && Array.isArray(ss.steps)) {
          -         for (const st of ss.steps) {
          -           if (st && Array.isArray(st.parts)) {
          -             for (const p of st.parts) if (p && p.type === 'tech') add(rel, p.name || p.slug);
          -           }
          -         }
          -       }
          -     }
          -   }
          -   form.__related = Array.from(rel);
          - })();

          if form.__related && form.__related.length
            .mt-4.pt-4.border-t.border-gray-200
              h3(class="text-sm font-semibold text-gray-700 mb-2") Related techniques
              .flex.flex-wrap.gap-3.text-sm
                each tech in form.__related
                  a(href=`/training/techniques/${encodeURIComponent(tech)}` class="text-blue-700 hover:underline") #{tech}

    else
      p(class="text-red-600 font-semibold text-center") No forms found.

    .mt-6.text-center
      a(href="/portal/dashboard" class="text-sm text-blue-600 hover:underline") ← Back to Dashboard
